@charset "UTF-8";

/* RObot PJ 메인 CSS - robot.css */

      /* 웹폰트 CDN */
      @import url('https://fonts.googleapis.com/css2?family=Barlow&family=Black+Ops+One&family=Chakra+Petch&family=Orbitron:wght@500&display=swap');

      /* 
          font-family: 'Barlow', sans-serif;
          font-family: 'Black Ops One', cursive;
          font-family: 'Chakra Petch', sans-serif;
          font-family: 'Orbitron', sans-serif;
      */

/* 전체 부드러운 스크롤 */
html{
  scroll-behavior: smooth;
}


/* 전체 가로스크롤 방지 */
body{
  overflow-x: hidden;
}

/* 초기화 */
html,body,h1,h2,p,ul,ol{
  margin: 0;
  padding: 0;
}
/******* 공통클래스 *******/
/* 메탈소재1 배경 */
.mt1{
  background: url(../images/gmetal2.jpg)
  no-repeat center/cover;
}
/* 메탈소재2 배경 */
.mt2{
  background: url(../images/gmetal3.jpg)
  no-repeat center/cover;
}


body{
  background: url(../images/bg.jpg) 
  no-repeat fixed top/cover;
}

/* 공사중표시 */
/* body *{
  outline: 2px dashed yellow;
} */

/************************** 1. 상단영역 **************************/

/* 1-1. 로고 */
.logo{
  /* 픽스드 포지션 셋팅 */
  position: fixed;
  top: calc(50% - 102px);
  left: calc(50% - 102px);
  /*******************************************

    [ 앱솔루트/픽스드 포지션 정중앙보내기 ]

    1. calc()로 계산하기
    ->  top: calc(50% - 중앙갈박스높이값절반);
        left: calc(50% - 중앙갈박스가로값절반);
        (주의: 마이너스 기호 앞뒤 반드시 띄어쓰기)

    2. 위치값 50%이동후 트랜스폼 사용하기
    ->  top: 50%;
        left: 50%;
        trasform: translate(-50%,-50%)

  *******************************************/
  z-index: 1;

  /* 크기확대하기 */
  transform: scale(2);
  
  /* 박스셋팅 */
  width: 200px;
  height: 200px;
  border-radius: 50%;
  border: 2px solid #ccc;
  text-align: center;
  /* 박스배경 */
  background: pink url(../images/robot_03.png)
  no-repeat center 10px/160px;

  /* 박스그림자 */
  box-shadow: 
  inset 0 0 20px 5px #000,
  0 0 10px 5px rgb(57, 247, 89);

  /* 글자셋팅 */
  color: aquamarine;
  font: 45px/200px 'Orbitron';
  /* font: 스두크/줄체; */
  text-shadow: 2px 2px 5px #000;
  
}
/* 1-2. 링크타이틀 */
.link{
  position: absolute;
  top: 100px;
  right: 50px;
  z-index: 1;
}
/* 링크 a */
.link a{
  /* a요소 필수셋팅: 글자색+밑줄없앰 */
  color: lawngreen;
  text-decoration: none;
  /* 글자:스두크/줄체 */
  font: 50px "Black Ops One";
  /* 글자그림자 */
  text-shadow: 2px 2px 2px #000;
}
/* 마우스 오버시 */
.link a:hover{
  /* 글자색 */
  color: orangered;
  /* 글자데코 */
  text-decoration: overline;
  /* 글자데코스타일 */
  text-decoration-style: wavy;
}
/* 1-3. 탑이동버튼 */
.btnTop{
  /* 픽스드 포지션 */
  position: fixed;
  bottom: 50px;
  right: 50px;

  /* 박스셋팅 */
  width: 100px;
  height: 100px;
  border-radius: 50%;
  border: 5px outset #fff;
  background-color: #ccc;
}
/* 버튼 a요소 */
.btnTop a{
  display: block;
  width: 100%;
  height: 100%;

  /* 글자셋팅 */
  color: blue;
  font: 30px/90px 'Black Ops One';
  /* 
    line-height가 높이값인 100px
    이므로 중앙 정렬위해 100px이 아닌이유는?
    버튼은 기본적으로 box-sizing:border-box
    이므로 패딩과 보더가 내부에 포함된다!
    따라서 컨텐트 영역이 그만큼 작아진다!
    박스보더가 5px이므로 양쪽합은 10px이다
    이것을 빼니까 90px인 것이다!
  */
  text-decoration: none;
}
/* 버튼 마우스 오버시 */
.btnTop:hover{
  background-color: #ff0;
  border-style: inset;
}
/* a요소 글자색 */
.btnTop:hover a{
  color: red;
}

/************************** 2. 메인영역 **************************/

/* 2-1. 로봇박스 */
.robx{
  /* 패딩 위,아래 */
  padding: 200px 0 50px;
}

/* 로봇머리 */
.head{
  position: relative;
  /* 부모자격 - 하위 div들 */
  z-index: 1;
  /* .body보다 위 */
  width: 250px;
  height: 150px;
  /* 마,영,오! */
  margin: 0 auto;
  border-radius: 35% 35% 0 0; 
  /* 턱깎기 */
  /* clip-path: polygon
  (0 0, 0 50%, 30% 100%, 60% 100%, 100% 50%, 100% 0); */
}
/* 로봇머리 직계하위 div는 모두 앱솔루트 */
.head>div{
  position: absolute;
}

/* 로봇 머리에 가상요소로 머리털박스 만들기 */
.head::before{
  content: '';
  display: block;
  position: absolute;
  top: -59px;
  left: 50%;
  /* 부모는? .head */
  width: 40px;
  height: 60px;
  background: url(../images/robothat.png)
  no-repeat 0/100% 100%;
  transform: translateX(-10%);
}
.head:hover::before{
  content: '';
  display: block;
  position: absolute;
  top: -70px;
  left: 50%;
  /* 부모는? .head */
  width: 60px;
  height: 70px;
  background: url(../images/robothat2.png)
  no-repeat 0/100% 100%;
  transform: translateX(-40%);
}
/* 머리박스 가상요소로 턱만들기 */
.head::after{
  content: '';
  display: block;
  position: absolute;
  /* 부모박스 높이만큼 밀어준다! */
  top: 100%;
  z-index: -1;
  width: 250px;
  height: 100px;
  background: url(../images/gmetal2.jpg)
  no-repeat bottom/100%;
  /* 턱깎기 */
  clip-path: polygon(0 0,33.33% 100%,66.66% 100%,100% 0);
}

/** 눈공통 **/
.eye{
  width: 55px;
  height: 55px;

  /* 배경공통 */
  background-color: #fff;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100% 100%;

  /* 둥근모서리 : 50% 원 */  
  border-radius: 50%;
  /* 보더 이중선 : double */
  border: 4px double #000;
}
/* 왼쪽눈 */
.e1{
  top: 45px;
  left: 40px;
  background-image: url(../images/e1.jpg);
  transform: rotate(20deg);
}
/* 오른쪽눈 */
.e2{
  top: 45px;
  right: 40px;
  background-image: url(../images/e2.jpg);
  transform: rotate(-20deg);
}
/* 코 */
.nose{
  top: 85px;
  left: 50%;
  width: 60px;
  height: 85px;
  background: url(../images/nose.jpg)
  no-repeat 0/110% 100%;
  transform: translateX(-50%);
  border-radius: 50px;
}
/* 입 */
.mouth{
  top: 170px;
  left: 85px;
  width: 110px;
  height: 50px;
  background: url(../images/mouth.png)
  no-repeat 0/100% 100%;
  /* transform: translateX(50deg); */
  border-radius: 5px;
  /* transform: skewX(45deg); */
  transform: rotate(-20deg);
}
/* 입옆에 별모양점 가상요소로 만들기 */
.mouth::before,.mouth::after{
  content: '';
  display: block;
  position: absolute;
  top: -10px;
  right: -25px;
  /* 부모는? .mouth */
  width: 15px;
  height: 15px;
  background-color: rgb(70, 49, 49);

  /* 삼각형 클리핑 속성으로 만들기 */
  clip-path: polygon(0 100%, 50% 0, 100% 100%);
}
.mouth::after{
  transform: rotate(180deg) translateY(-30%);
}

/* 
  [ CSS 클리핑 속성 ]
  -> clip-path : polygon(x1, y1, x2, y2...)
  -> 각 좌표쌍은 띄어쓰기로 각 점은 콤마로 구분
  -> 각 점을 연결하여 도형모양만 출력한다!
  -> px은 각 도형 크기 내부의 수치로 쓰고
  %는 도형을 기준한 위치를 %로 나타낸다!
*/

/* 귀 공통 */
.ear{
  width: 60px;
  height: 80px;
  top: 43px;
  z-index: -1;
}
/* 왼쪽귀 */
.er1{
  left: -45px;
  border-radius: 55% 0 0 40%;
}
/* 오른쪽귀 */
.er2{
  right: -45px;
  border-radius: 0 55% 40% 0;
}


/****** 로봇몸통 ******/
.body{
  /* 부모자격 : 하위 직계 div들 */
  position: relative;
  width: 200px;
  height: 420px;
  margin: 0 auto;
  margin-top: 130px;
}

/* 몸통 하위 직계 div 모두 앱솔루트! */
.body>div{
  position: absolute;
  box-shadow: 0 0 10px 5px rgb(255, 251, 0);
}
/* 가상요소로 몸통 상단만들기 */
.body::before{
  content: '';
  display: block;
  position: absolute;
  left: -50px;
  width: 300px;
  height: 200px;
  
  /* 그라데이션 */
  background-image: 
  linear-gradient(-25deg,rgb(191, 202, 32), rgb(195, 209, 116),
  #748b1d, #cdcebb);
    /* 몸깎기 */
    clip-path: polygon(10% 0,0 20%,0 50%,10% 100%,
    90% 100%,100% 50%,100% 20%,90% 0);
}
/* 가상요소로 몸통 하단만들기 */
.body::after{
  content: '';
  display: block;
  position: absolute;
  bottom: -25px;
  left: -50px;
  width: 300px;
  height: 175px;
  /* 그라데이션 */
  background-image: 
  linear-gradient(25deg,rgb(199, 188, 29), rgb(31, 98, 143),
  #d4af07, #bfc49b);
    /* 몸깎기 */
    clip-path: polygon(10% 0,0 20%,0 50%,10% 100%,
    90% 100%,100% 50%,100% 20%,90% 0);
}


/* 목 */
.neck{
  top: -40px;
  left: 64px;
  width: 70px;
  height: 50px;
  border-radius: 0 0 20px 20px;
  border-bottom: 15px ridge goldenrod;
}
/* 팔공통 */
.arm{
  top: 25px;
  width: 80px;
  height: 200px;
  z-index: -1;
  border-radius: 25px;
  /* 회전축변경 : 가로중앙 세로10%지점 */
  transform-origin: center 15%;
}
/* 팔공통 가상요소로 연결부분 만들기 */
.arm::before,.arm::after{
  content: '';
  /* 가상요소에서 content를 사용하는 이유는
   태그를 만든것과 같기때문 */
  display: block;
  position: absolute;
  bottom: -35px;
  left: -2px;
  z-index: 1;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: 3px solid gold;
  background-color: goldenrod;
  /* 보더,패딩포함 크기유지 */
  box-sizing: border-box;
}
/* 팔 연결부분 내부박스 */
.arm::after{
  transform: scale(.8);
  /* 선형 그라데이션 */
  background-image: linear-gradient(-45deg,
  #222,rgb(220, 235, 84),rgb(172, 172, 27));
}
/* 팔 하단 */
.arm span{
  position: absolute;
  /* 부모는? .arm */
  top: 100%;
  left: 5px;
  display: block;
  width: 70px;
  height: 190px;
  border-radius: 20px;
  /* 회전축 변경 : 세로방향 top */
  transform-origin: top;
  box-shadow: 0 0 10px 5px rgb(255, 217, 0);
}
/* 팔하단 가상요소로 손박스 만들기 */
.arm span::after{
  content: '';
    /* 가상요소에서 content를 사용하는 이유는
   태그를 만든것과 같기때문 */
  display: block;
  position: absolute;
  bottom: -138px;
  width: 100px;
  height: 135px;
  /* outline: 2px dashed lime; */
  /* 회전축변경 : 세로방향 top */
  transform-origin: top;
  transform: rotate(10deg);
}
/* 왼쪽손 배경이미지 */
.a1 span::after{
  background: url(../images/hand_left.png)
  no-repeat bottom/100%;
  left: -15px;
  transform: rotate(3deg);

}
/* 오른쪽손 배경이미지 */
.a2 span::after{
  background: url(../images/hand_right.png)
  no-repeat bottom/100%;
  right: -15px;
  transform: rotate(-3deg);

}
/* 왼팔 */
.a1{
  left: -115px;
  transform: rotate(15deg);
}
/* 왼팔하단 */
.a1 span{
  transform: rotate(-6deg);
}
/* 오른팔 */
.a2{
  right: -115px;
  transform: rotate(-15deg);
}
/* 오른팔하단 */
.a2 span{
  transform: rotate(6deg);
}
/* 다리공통 */
.leg{
  top: 95%;
  /* 부모박스 높이만큼 아래로 밀어냄 */
  width: 95px;
  height: 240px;
  z-index: -1;
  border-radius: 25px;
  /* 회전축변경 : 가로중앙 세로10%지점 */
  transform-origin: center 15%;
}
/* 다리공통 가상요소로 연결부분 만들기 */
.leg::before,.leg::after{
  content: '';
  /* 가상요소에서 content를 사용하는 이유는
   태그를 만든것과 같기때문 */
  display: block;
  position: absolute;
  bottom: -40px;
  z-index: 1;
  width: 85px;
  height: 85px;
  background-color: goldenrod;
  border-radius: 25px;
  border: 3px solid gold;
  /* 트랜스폼 : 먼저X축 축소하고 회전
  -> 무엇을 먼저했느냐에 따라 결과 달라짐! */
  transform: scaleX(.9) rotate(45deg);
}
/* 다리 연결부분 내부박스 */
.leg::after{
  transform: scale(.7,.8) rotate(45deg);
  /* 선형 그라데이션 */
  background-image: linear-gradient(-102deg,
  rgb(92, 89, 89),rgb(220, 235, 84),rgb(172, 162, 27));
}

/* 다리하단 공통 */
.leg span{
  position: absolute;
  /* 부모는? .arm */
  top: 100%;
  /* left: 5px; */
  display: block;
  width: 85px;
  height: 290px;
  border-radius: 20px;
  /* 회전축 변경 : 세로방향 top */
  transform-origin: top;
  box-shadow: 0 0 10px 5px rgb(255, 217, 0);
}
/* 다리하단 가상요소로 발만들기 */
.leg span::after{
  content: '';
  /* 가상요소에서 content를 사용하는 이유는
   태그를 만든것과 같기때문 */
  display: block;
  position: absolute;
  bottom: -75px;
  left: -15px;
  width: 110px;
  height: 70px;
  background-color: goldenrod;
  border-radius: 30px 30px 5px 5px;
  border: 4px solid gold;
  border-bottom: 12px solid goldenrod;
  /* 선형 그라데이션 */
  background-image: linear-gradient(-45deg,
  rgb(92, 89, 89),rgb(220, 235, 84),rgb(172, 162, 27));
}
/* 다리하단 가상요소로 부츠만들기 */
.leg span::before{
  content: '';
  display: block;
  position: absolute;
  top: 130px;
  left: -7px;
  width: 90px;
  height: 170px;
  border: 4px solid gold;
  border-top: 16px solid goldenrod;

  /* 선형 그라데이션 */
  background-image: linear-gradient(-90deg,
  rgb(92, 89, 89),rgb(220, 235, 84),rgb(172, 162, 27));
}
/* 왼다리 */
.l1{
  left: -25px;
}
.l1 span{
  left: 3px;
}
/* 오른다리 */
.l2{
  right: -25px;
}
.l2 span{
  right: 3px;
}

/* 어깨공통 */
.shd{
  top: 0px;
  width: 85px;
  height: 100px;
  /* border-radius: 40%; */
}
/* 왼어깨 */
.s1{
  left: -120px;
  border-radius: 50% 5% 5% 50%;
  transform: rotate(8deg);
}
/* 오른어깨 */
.s2{
  right: -120px;
  border-radius: 5% 50% 50% 5%;
  transform: rotate(-8deg);
}
/* TV */
.tv{
  top: 45px;
  left: 7px;
  width: 190px;
  height: 140px;
  border-radius: 5px;
  background: url(../images/tv.jpg)
  no-repeat center/cover;
}
/* 스크린 */
.screen{
  position: absolute;
  top: 12px;
  left: 8px;
  width: 137px;
  height: 106px;
  border-radius: 13px;
  background-color: #000;

  /* 자식요소 아이프레임 넘치는 부분 숨기기 */
  overflow: hidden;
}
/* 동영상 iframe */
.screen iframe{
  position: absolute;
  top: 1px;
  left: -23px;
  width: 184px;
  height: 106px;
  /* 아이프레임 기본보더없앰 */
  border: none;
}

/******************** 2-2. 로봇설명박스 ********************/
.dcbx{
  /* 최대가로크기 maw */
  max-width: 800px;
  /* 마영오! */
  margin: 0 auto;
  /* 하단공간 */
  margin-bottom: 200px;
  /* 반투명배경색 */
  background-color: rgba(0, 0, 0, 0.404);
  /* 글자색 */
  color: #fff;
  /* 글자그림자 */
  text-shadow: 1px 1px 1px #000;
  /* 패딩 */
  padding: 15px 30px; 
  /* 경계선 : 두종색 */
  border: 3px solid #fff;
  /* 둥근모서리 */
  border-radius: 20px;
  /* 박스그림자를 이용한 글로우효과 */
  box-shadow: 
  inset 0 0 20px red,
  inset 0 0 50px 10px goldenrod;
  /* 
    - inset 은 내부그림자 옵션
    x y [spread] blur 색
    - spread 는 박스그림자 크기
  */
}

/* 2-2-1.제목 */
.dcbx h2{
  /* 스티키 포지션! */
  position: sticky;
  top: 10px;
  /* 글자셋팅 */
  font-family: 'Chakra Petch', sans-serif;
  font-size: 35px;
  color: lime;

  /* 박스셋팅 */
  text-align: center;
  background-color: rgba(255, 255, 255, 0.322);
  /* 둥근모서리 */
  border-radius: 20px;
}
/* 2-2-2.출처 */
.dcbx small{
  /* 글자셋팅 */
  font-family: 'Chakra Petch', sans-serif;
  font-size: 12px;
  line-height: 3;
  color: #ff0;
  /* 박스셋팅 */
  display: block;
  text-align: center;
}
/* 2-2-3.내용단락 */
.dcbx p{
  /* 글자셋팅 */
  font-family: 'Barlow', sans-serif;
  font-size: 15px;
  line-height: 1.5;
  letter-spacing: 1px;
  word-spacing: 2px;
  
  /**************************************
    [ 다단설정하기 ]
    - 다중열속성
    -> colrumn-count : 다중열개수 cmc
    -> colrumn-rule : 다중열구분선 cmr
    -> colrumn-pag : 다중열사이간격 cmg
   **************************************/
  
  /* 다중열개수 */
  column-count: 3;

  /* 다중열구분선: 셋팅이 보더와 유사 */
  column-rule: 5px dotted lightgreen;
  /* column-rule: 두께 종류 색상; */

  /* 다중열사이간격 */
  column-gap: 55px;

  /* 양쪽정렬 : taj */
  text-align: justify;
  /* 단어깨기 : wbb */
  word-break: break-all;
  /* 단어깨기는 
  문단이 1byte문자인 영문자일경우
  기본적으로 단어 단위로 줄바꿈을 하는
  셋팅이 되어 있다. 이때 양쪽정렬시
  중간에 큰 공백이 생기는 원인이 된다
  그래서 단어를 글자단위로 모두깨주는
  설정이 word-break: break-all 이다! 
  한글과 같은 2byte문자는 자동으로 깨져있음 */
  
  /* 들여쓰기 : ti */
  text-indent: 20px;
}
/* 설명문단 첫번째 글자만 가상요소로
글자 디자인 변경하기 */
.dcbx p::first-letter{
  /* 글자셋팅 */
  font-size: 30px;
  font-weight: bold;
  color: orange;
}

/************************** 3. 하단영역 **************************/

#info{
  /* 글자셋팅 */
  color: #fff;
  font: 30px 'Black Ops One';
  text-shadow: 2px 2px 2px #000;

  /* 박스셋팅 */
  background-color: rgba(0, 0, 0, 0.486);
  text-align: center;
  padding: 50px;
}
/* 속박스 가상요소로 아이콘 모양 넣기 */

.info::before{
  content: '';
  display: inline-block;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 2px solid #ccc;
  background: pink url(../images/robot_03.png)
  no-repeat;
  background-position: -7px 1px;
  background-size: 50px;
  /* 인라인요소간 세로정렬 : va */
  vertical-align: top;
}